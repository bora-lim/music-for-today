{"version":3,"sources":["components/weather.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Weather","props","onClick","console","log","queryParams","encodeURIComponent","fetch","then","response","json","myJson","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAqDeA,EAlDC,SAACC,GA+Cf,OAAO,wBAAQC,QA9CC,WACdC,QAAQC,IAAI,UAEZ,IAEIC,EACF,IACAC,mBAAmB,cADnB,oGAIFD,GACE,IAAMC,mBAAmB,UAAY,IAAMA,mBAAmB,KAChED,GACE,IACAC,mBAAmB,aACnB,IACAA,mBAAmB,MACrBD,GACE,IACAC,mBAAmB,YACnB,IACAA,mBAAmB,OACrBD,GACE,IACAC,mBAAmB,aACnB,IACAA,mBAAmB,YACrBD,GACE,IACAC,mBAAmB,aACnB,IACAA,mBAAmB,QACrBD,GACE,IAAMC,mBAAmB,MAAQ,IAAMA,mBAAmB,MAC5DD,GACE,IAAMC,mBAAmB,MAAQ,IAAMA,mBAAmB,KAE5DC,MAAM,GAAD,OAjCH,wEAiCG,OAAUF,IACZG,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUG,GACdR,QAAQC,IAAIQ,KAAKC,UAAUF,QAI1B,oBC3CMG,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.56517f53.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./weather.scss\";\n\nconst Weather = (props) => {\n  const getInfo = () => {\n    console.log(\"click!\");\n\n    const url =\n      \"http://apis.data.go.kr/1360000/VilageFcstInfoService/getUltraSrtNcst\"; /*URL*/\n    let queryParams =\n      \"?\" +\n      encodeURIComponent(\"ServiceKey\") +\n      \"=\" +\n      process.env.REACT_APP_API_KEY; /*Service Key*/\n    queryParams +=\n      \"&\" + encodeURIComponent(\"pageNo\") + \"=\" + encodeURIComponent(\"1\"); /**/\n    queryParams +=\n      \"&\" +\n      encodeURIComponent(\"numOfRows\") +\n      \"=\" +\n      encodeURIComponent(\"10\"); /**/\n    queryParams +=\n      \"&\" +\n      encodeURIComponent(\"dataType\") +\n      \"=\" +\n      encodeURIComponent(\"XML\"); /**/\n    queryParams +=\n      \"&\" +\n      encodeURIComponent(\"base_date\") +\n      \"=\" +\n      encodeURIComponent(\"20210507\"); /**/\n    queryParams +=\n      \"&\" +\n      encodeURIComponent(\"base_time\") +\n      \"=\" +\n      encodeURIComponent(\"1500\"); /**/\n    queryParams +=\n      \"&\" + encodeURIComponent(\"nx\") + \"=\" + encodeURIComponent(\"18\"); /**/\n    queryParams +=\n      \"&\" + encodeURIComponent(\"ny\") + \"=\" + encodeURIComponent(\"1\"); /**/\n\n    fetch(`${url}${queryParams}`)\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        console.log(JSON.stringify(myJson));\n      });\n  };\n\n  return <button onClick={getInfo}>click</button>;\n};\n\nexport default Weather;\n","import React from \"react\";\nimport Weather from \"./components/weather\";\n\nfunction App() {\n  return <Weather />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}